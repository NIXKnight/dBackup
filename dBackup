#!/usr/bin/env bash

# +------------------------------------------------------------------------------------------+
# + FILE: dBackup                                                                            +
# +                                                                                          +
# + DESCRIPTION: dBackup (Data Backup) is a parameterized wrapper written in bash around     +
# +              different backup utilities for Linux/UNIX-like systems.                     +
# +                                                                                          +
# + AUTHOR: Saad Ali (https://github.com/NIXKnight)                                          +
# +                                                                                          +
# + LICENSE: MIT License (See LICENSE file)                                                  +
# +------------------------------------------------------------------------------------------+

# SCRIPT VERSION

VERSION="v1.0-dev"

# GLOBAL VARIABLES
TARKIVER=$(which tar) # Locate tar archiving utility.
TAR_ARCHIVES= # Empty variable - To be set by createTarArchive function.
DIRS= # Empty variable - To be set via -d or --directory argument. Target directories that
      # need to be backed up will be set here.
MBKP_DIR= # Empty variable - To be set via -D or --backup-directory argument. This will be the
          # master/destination backup directory which will contain backup directories based
          # on a date/time format.
KOMPRESOR= # Empty variable - To be set via -c or --conpression-format. This will help compress
           # a tar archive.
KOMPRES_FORMAT= # Empty variable - To be set via -c or --conpression-format. This will help
                # compress a tar archive.
DTSTRING="%Y%m%d" # Set a default date/time format. Used to set backup directory name. This can
                  # be overridden by providing a custom format via --strftime parameter.

# FUNCTIONS

# Function to show help
function showHelp {
  echo -e "dBackup $VERSION by Saad Ali (https://github.com/NIXKnight)"
  echo -e "This script is licensed under the terms of MIT License."
  echo -e "\nUSAGE: dBackup [OPTIONS]"
  echo -e "\nOPTIONS"
  echo -e "\n  The script supports the following options, which should be specified on the command line:"
  echo -e "\n    -h or --help"
  echo -e "      Print this help."
  echo -e "\n    -d or --directory [/path/to/target/directory]"
  echo -e "      Target directory to be included in a backup. Provide this parameter multiple times to backup multiple directories."
  echo -e "      Example: ./dBackup -d /opt/foo --directory /home/bar"
  echo -e "\n    -D or --backup-directory [/path/to/destination/directory]"
  echo -e "      Destination directory where backup is placed in a subdirectory named after the date of the backup."
  echo -e "      If the destination backup directory doesn't exist, the script will ask you wether to create it or not."
  echo -e "      Example: ./dBackup -d /opt/foo --directory /home/bar -D /backup"
  echo -e "\n    -c or --compression-format [gzip|bzip2]"
  echo -e "      The compression format to use. If this parameter is not provided, compression will not be performed."
  echo -e "      Example: ./dBackup -d /opt/foo --directory /home/bar -D /backup -c bzip2"
  echo -e "\n    --strftime [date format]"
  echo -e "      Change date format of backup directory name. By default the date format is %Y%m%d."
  echo -e "      Example: ./dBackup -d /opt/foo --directory /home/bar -D /backup -c bzip2 --strftime %d_%B_%Y"
}

# This function validates if a directory exists. If the directory exists,it checks if the DIRS
# variable is zero or not. If the variable has zero length, then set it to the provided
# directory. If the variable does not have zero length, add the directory to the variable.
# If the directory does not exist, then exit the script.
function validateAndSetTargetDirectory {
  if [ -d $1 ] ; then
    if [[ -z $DIRS ]] ; then
      DIRS="$1"
    else
      DIRS="$DIRS $1"
    fi
  else
    printf "Target directory $1 is not a valid directory!\nExiting...\n"
    exit 1
  fi
}

# PARAMETERS TO BE USED BY THE SCRIPT

SHORT_OPTS="hd:,D:,c:"
LONG_OPTS="help,directory:,backup-directory:,strftime:,compression-format:"
OPTS=$(getopt --shell bash --options $SHORT_OPTS --longoptions $LONG_OPTS -- $@)

# Show help if no or invalid parameter is provided

if [ $? != 0 ] ; then
  echo -e "Use -h or --help to see options.\nExiting..."
elif [[ $NUMARGS -eq 0 ]] ; then
  showHelp
  exit 1
fi

eval set -- "$OPTS"

# PARAMETER PARSING START

while true ; do
  case "$1" in
    -h|--help)
      showHelp
      exit 0
      ;;
    -d|--directory) # This parameter is used to set the target directory or directories that
                    # will be included in a backup.
      validateAndSetTargetDirectory $2
      shift 2
      ;;
    -D|--backup-directory) # This parameter is used to set the master/destination backup
                           # directory.
      shift 2
      ;;
    -c|--compression-format) # This parameter is used to set a compression format to either
                             # gzip or bzip2.
      shift 2
      ;;
    --strftime) # This parameter is used to set a custom date/time format which will be used to
                # set backup directory name.
      shift 2
      ;;
    --)
      shift
      break
      ;;
    *)
      showHelp
      exit 1
      ;;
  esac
done

# PARAMETER PARSING END
